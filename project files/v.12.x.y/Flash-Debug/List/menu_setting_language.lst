###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       24/Mar/2017  12:54:58
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\menu_setting_language.c
#    Command line =  
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\menu_setting_language.c" -D USE_STDPERIPH_DRIVER -D
#        STM32F2XX -D USE_USB_OTG_FS -D KEYBOARD_VER_1 -D SYSTEM_VIEWER_ENABLE
#        -lc "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List" --remarks -o
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --enable_multibytes --fpu=None
#        --dlib_config G:\PRG\IAR7_50_2\arm\INC\c\DLib_Config_Full.h -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\usb\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_OTG_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Core\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\"
#        -I "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\Config\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\OS\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\SEGGER\" -On --use_c++_inline
#        --require_prototypes -I G:\PRG\IAR7_50_2\arm\CMSIS\Include\ -D
#        ARM_MATH_CM3
#    List file    =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List\menu_setting_language.lst
#    Object file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj\menu_setting_language.o
#
###############################################################################

G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working files\src\menu_setting_language.c
      1          #include "header.h"
      2          
      3          /*****************************************************/
      4          //Формуємо екран відображення мови меню
      5          /*****************************************************/
      6          void make_ekran_setting_language(void)
      7          {
      8            if (
      9                (current_state_menu2.edition == ED_WARNING_EDITION_BUSY) ||
     10                (current_state_menu2.edition == ED_WARNING_ENTER_ESC)
     11               )   
     12            {
     13              const uint8_t information_about_info[MAX_NAMBER_LANGUAGE][MAX_COL_LCD + 1] = 
     14              {
     15                "Ред.не разрешено",
     16                "Ред.не дозволене",
     17                "Ed.isn't allowed",
     18                "Ред.не разрешено",
     19              };
     20          
     21              const uint8_t information_about_error[MAX_NAMBER_LANGUAGE][MAX_COL_LCD + 1] = 
     22              {
     23                " Вых.за диапазон",
     24                " Вих.за діапазон",
     25                "  Out of Limits ",
     26                "Вых.за диапазон "
     27              };
     28          
     29              enum _edition_stats edition = current_state_menu2.edition;
     30              make_ekran_about_info(((edition == ED_WARNING_EDITION_BUSY) ? false : true), ((edition == ED_WARNING_EDITION_BUSY) ? information_about_info : information_about_error));
     31            }
     32            else
     33            {
     34              const uint8_t name_string[MAX_NAMBER_LANGUAGE][MAX_ROW_FOR_VIEW_SETTING_LANGUAGE][MAX_COL_LCD + 1] = 
     35              {
     36                "      Язык      ",
     37                "      Мова      ",
     38                "    Language    ",
     39                "      Язык      "
     40              };
     41              int index_language = index_language_in_array(select_struct_settings_fix()->language);
     42            
     43              unsigned int position_temp = current_state_menu2.index_position;
     44              //Множення на два величини position_temp потрібне для того, бо на одну позицію ми використовуємо два рядки (назва + значення)
     45              unsigned int index_in_ekran = ((position_temp << 1) >> POWER_MAX_ROW_LCD) << POWER_MAX_ROW_LCD;
     46          
     47              for (size_t i = 0; i < MAX_ROW_LCD; i++)
     48              {
     49                unsigned int index_in_ekran_tmp = index_in_ekran >> 1;
     50                if (index_in_ekran_tmp < MAX_ROW_FOR_VIEW_SETTING_LANGUAGE)
     51                {
     52                  if ((i & 0x1) == 0)
     53                  {
     54                    //У непарному номері рядку виводимо заголовок
     55                    for (size_t j = 0; j<MAX_COL_LCD; j++) working_ekran[i][j] = name_string[index_language][index_in_ekran_tmp][j];
     56                  }
     57                  else
     58                  {
     59                    //У парному номері рядку виводимо значення уставки
     60                    uint8_t information[MAX_NAMBER_LANGUAGE][MAX_COL_LCD + 1] = 
     61                    {
     62                      "    Русский     ",
     63                      "   Українська   ",
     64                      "    English     ",
     65                      "     Казак      "
     66                    };
     67                    const unsigned int cursor_x[MAX_NAMBER_LANGUAGE] = {3, 2, 3, 4};
     68                    
     69                    for (size_t j = 0; j < MAX_COL_LCD; j++) working_ekran[i][j] = information[index_language][j];
     70                    if (position_temp == index_in_ekran_tmp)
     71                    {
     72                      current_state_menu2.position_cursor_x = cursor_x[index_language];
     73                    }
     74                  }
     75                }
     76                else
     77                  for (size_t j = 0; j < MAX_COL_LCD; j++) working_ekran[i][j] = ' ';
     78          
     79                index_in_ekran++;
     80              }
     81          
     82              //Відображення курору по вертикалі і курсор завжди має бути у полі із значенням устаки
     83              current_state_menu2.position_cursor_y = ((position_temp<<1) + 1) & (MAX_ROW_LCD - 1);
     84          
     85              //Курсор + миготіння
     86              if(current_state_menu2.edition <= ED_CAN_BE_EDITED) 
     87              {
     88                current_state_menu2.cursor_on = 0;
     89                current_state_menu2.cursor_blinking_on = 0;
     90              }
     91              else 
     92              {
     93                current_state_menu2.cursor_on = 1;
     94                current_state_menu2.cursor_blinking_on = 1;
     95              }
     96            }
     97          
     98            //Обновити повністю весь екран
     99            current_state_menu2.current_action = ACTION_WITH_CARRENT_EKRANE_FULL_UPDATE;
    100          }
    101          /*****************************************************/
    102          
    103          /*****************************************************/
    104          /*
    105          Натискування Enter у вікні відображення налаштувань мови меню
    106          */
    107          /*****************************************************/
    108          enum _result_pressed_enter_during_edition press_enter_in_setting_language(void)
    109          {
    110            enum _result_pressed_enter_during_edition result = RPEDE_NONE;
    111            switch (current_state_menu2.edition)
    112            {
    113            case ED_EDITION:
    114              {
    115                //Перевіряємо, чи дані рельно змінилися
    116                result = RPEDE_DATA_NOT_CHANGED;
    117                
    118                int32_t *p_language_edit = &(settings_fix_edit.language);
    119                int32_t *p_language_cont = &(settings_fix.language);
    120                if (*p_language_cont != *p_language_edit) 
    121                {
    122                  if (check_data_setpoint(*p_language_edit, VALUE_SETTING_LANGUAGE_MIN, VALUE_SETTING_LANGUAGE_MAX) == 1)
    123                  {
    124                    *p_language_cont = *p_language_edit;
    125                    
    126                    config_settings_modified |= MASKA_CHANGED_SETTINGS;
    127                    result = RPEDE_DATA_CHANGED_OK;
    128                  }
    129                  else result = RPEDE_DATA_CHANGED_OUT_OF_RANGE;
    130                }
    131          
    132                break;
    133              }
    134            }
    135            
    136            return result;
    137          }
    138          /*****************************************************/
    139          
    140          /*****************************************************/
    141          /*
    142          Натискування ESC у вікні налаштувань мови меню
    143          */
    144          /*****************************************************/
    145          void press_esc_in_setting_language(void)
    146          {
    147            settings_fix_edit.language = settings_fix.language; 
    148          }
    149          /*****************************************************/
    150          
    151          /*****************************************************/
    152          //Зміна налаштувань мови меню
    153          /*****************************************************
    154          Вхідні параметри
    155          (1 << BIT_KEY_RIGHT)- натснуто кнопку праворуч
    156          (1 << BIT_KEY_LEFT) - атиснуто кнопку ліворуч
    157          
    158          Вхідні параметри
    159            Немає
    160          *****************************************************/
    161          void change_setting_language(unsigned int action)
    162          {
    163            //Вводимо число у відповідне поле
    164            if (
    165                ((action & (1 << BIT_KEY_LEFT )) != 0) ||
    166                ((action & (1 << BIT_KEY_RIGHT)) != 0)
    167               )   
    168            {
    169              int32_t value = settings_fix_edit.language;
    170              if ((action & (1 << BIT_KEY_RIGHT)) != 0) 
    171              {
    172                if ((++value) > VALUE_SETTING_LANGUAGE_MAX)
    173                  value = VALUE_SETTING_LANGUAGE_MIN;
    174              }
    175              else 
    176              {
    177                if ((--value) < VALUE_SETTING_LANGUAGE_MIN)
    178                  value = VALUE_SETTING_LANGUAGE_MAX;
    179              }
    180              settings_fix_edit.language = value;
    181            }
    182          }
    183          /*****************************************************/
    184          
    185          /*****************************************************/
    186          //
    187          /*****************************************************/
    188          /*****************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   change_setting_language
     312   make_ekran_setting_language
       312   -> __aeabi_memcpy4
       312   -> index_language_in_array
       312   -> make_ekran_about_info
       312   -> select_struct_settings_fix
      16   press_enter_in_setting_language
        16   -> check_data_setpoint
       0   press_esc_in_setting_language


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      16  ?_0
      68  ?_1
      68  ?_2
      68  ?_3
      68  ?_4
      46  change_setting_language
     312  make_ekran_setting_language
      76  press_enter_in_setting_language
      14  press_esc_in_setting_language

 
 288 bytes in section .rodata
 496 bytes in section .text
 
 496 bytes of CODE  memory
 288 bytes of CONST memory

Errors: none
Warnings: none
