###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       24/Mar/2017  12:55:01
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\stm32f2xx_it.c
#    Command line =  
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\stm32f2xx_it.c" -D USE_STDPERIPH_DRIVER -D STM32F2XX -D
#        USE_USB_OTG_FS -lc
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List" --remarks -o
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --enable_multibytes --fpu=None
#        --dlib_config G:\PRG\IAR7_50_2\arm\INC\c\DLib_Config_Full.h -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\usb\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_OTG_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Core\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\"
#        -I "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\Config\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\OS\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\SEGGER\" -On --use_c++_inline -I
#        G:\PRG\IAR7_50_2\arm\CMSIS\Include\ -D ARM_MATH_CM3
#    List file    =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List\stm32f2xx_it.lst
#    Object file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj\stm32f2xx_it.o
#
###############################################################################

G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working files\src\stm32f2xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    Project/STM32F2xx_StdPeriph_Template/stm32f2xx_it.c 
      4            * @author  MCD Application Team
      5            * @version V1.1.0
      6            * @date    13-April-2012
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     14            *
     15            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     16            * You may not use this file except in compliance with the License.
     17            * You may obtain a copy of the License at:
     18            *
     19            *        http://www.st.com/software_license_agreement_liberty_v2
     20            *
     21            * Unless required by applicable law or agreed to in writing, software 
     22            * distributed under the License is distributed on an "AS IS" BASIS, 
     23            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     24            * See the License for the specific language governing permissions and
     25            * limitations under the License.
     26            *
     27            ******************************************************************************
     28            */ 
     29          
     30          /* Includes ------------------------------------------------------------------*/
     31          #include "stm32f2xx_it.h"
     32          #include "header.h"
     33          
     34          /** @addtogroup Template_Project
     35            * @{
     36            */
     37          
     38          /* Private typedef -----------------------------------------------------------*/
     39          /* Private define ------------------------------------------------------------*/
     40          /* Private macro -------------------------------------------------------------*/
     41          /* Private variables ---------------------------------------------------------*/
     42          /* Private function prototypes -----------------------------------------------*/
     43          /* Private functions ---------------------------------------------------------*/
     44          
     45          /******************************************************************************/
     46          /*            Cortex-M3 Processor Exceptions Handlers                         */
     47          /******************************************************************************/
     48          
     49          /**
     50            * @brief   This function handles NMI exception.
     51            * @param  None
     52            * @retval None
     53            */
     54          void NMI_Handler(void)
     55          {
     56          }
     57          
     58          /**
     59            * @brief  This function handles Hard Fault exception.
     60            * @param  None
     61            * @retval None
     62            */
     63          void HardFault_Handler(void)
     64          {
     65            /* Go to infinite loop when Hard Fault exception occurs */
     66            while (1)
     67            {
     68              total_error_sw_fixed(1);
     69            }
     70          }
     71          
     72          /**
     73            * @brief  This function handles Memory Manage exception.
     74            * @param  None
     75            * @retval None
     76            */
     77          void MemManage_Handler(void)
     78          {
     79            /* Go to infinite loop when Memory Manage exception occurs */
     80            while (1)
     81            {
     82              total_error_sw_fixed(2);
     83            }
     84          }
     85          
     86          /**
     87            * @brief  This function handles Bus Fault exception.
     88            * @param  None
     89            * @retval None
     90            */
     91          void BusFault_Handler(void)
     92          {
     93            /* Go to infinite loop when Bus Fault exception occurs */
     94            while (1)
     95            {
     96              total_error_sw_fixed(3);
     97            }
     98          }
     99          
    100          /**
    101            * @brief  This function handles Usage Fault exception.
    102            * @param  None
    103            * @retval None
    104            */
    105          void UsageFault_Handler(void)
    106          {
    107            /* Go to infinite loop when Usage Fault exception occurs */
    108            while (1)
    109            {
    110              total_error_sw_fixed(4);
    111            }
    112          }
    113          
    114          /**
    115            * @brief  This function handles SVCall exception.
    116            * @param  None
    117            * @retval None
    118            */
    119          void SVC_Handler(void)
    120          {
    121          }
    122          
    123          /**
    124            * @brief  This function handles Debug Monitor exception.
    125            * @param  None
    126            * @retval None
    127            */
    128          void DebugMon_Handler(void)
    129          {
    130          }
    131          
    132          /**
    133            * @brief  This function handles PendSVC exception.
    134            * @param  None
    135            * @retval None
    136            */
    137          void PendSV_Handler(void)
    138          {
    139          }
    140          
    141          /**
    142            * @brief  This function handles SysTick Handler.
    143            * @param  None
    144            * @retval None
    145            */
    146          void SysTick_Handler(void)
    147          {
    148          }
    149          
    150          /**
    151            * @brief  This function handles OTG_HS Handler.
    152            * @param  None
    153            * @retval None
    154            */
    155          #ifdef USE_USB_OTG_HS  
    156          void OTG_HS_IRQHandler(void)
    157          #else
    158          void OTG_FS_IRQHandler(void)
    159          #endif
    160          {
    161          #ifdef SYSTEM_VIEWER_ENABLE
    162            SEGGER_SYSVIEW_RecordEnterISR();
    163          #endif
    164            
    165            USBD_OTG_ISR_Handler (&USB_OTG_dev);
    166            
    167          #ifdef SYSTEM_VIEWER_ENABLE
    168            SEGGER_SYSVIEW_RecordExitISR();
    169          #endif
    170          }
    171          
    172          
    173          /******************************************************************************/
    174          /*                 STM32F2xx Peripherals Interrupt Handlers                   */
    175          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    176          /*  available peripheral interrupt handler's name please refer to the startup */
    177          /*  file (startup_stm32f2xx.s).                                               */
    178          /******************************************************************************/
    179          
    180          /**
    181            * @brief  This function handles PPP interrupt request.
    182            * @param  None
    183            * @retval None
    184            */
    185          /*void PPP_IRQHandler(void)
    186          {
    187          }*/
    188          
    189          /**
    190            * @}
    191            */ 
    192          
    193          
    194          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   BusFault_Handler
         8   -> total_error_sw_fixed
       0   DebugMon_Handler
       8   HardFault_Handler
         8   -> total_error_sw_fixed
       8   MemManage_Handler
         8   -> total_error_sw_fixed
       0   NMI_Handler
       8   OTG_FS_IRQHandler
         8   -> USBD_OTG_ISR_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   SysTick_Handler
       8   UsageFault_Handler
         8   -> total_error_sw_fixed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      10  BusFault_Handler
       2  DebugMon_Handler
      10  HardFault_Handler
      10  MemManage_Handler
       2  NMI_Handler
      10  OTG_FS_IRQHandler
       2  PendSV_Handler
       2  SVC_Handler
       2  SysTick_Handler
      10  UsageFault_Handler

 
 64 bytes in section .text
 
 64 bytes of CODE memory

Errors: none
Warnings: none
