###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       24/Mar/2017  12:54:57
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\menu_labels.c
#    Command line =  
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\menu_labels.c" -D USE_STDPERIPH_DRIVER -D STM32F2XX -D
#        USE_USB_OTG_FS -D KEYBOARD_VER_1 -D SYSTEM_VIEWER_ENABLE -lc
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List" --remarks -o
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --enable_multibytes --fpu=None
#        --dlib_config G:\PRG\IAR7_50_2\arm\INC\c\DLib_Config_Full.h -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\usb\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_OTG_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Core\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\"
#        -I "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\Config\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\OS\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\SEGGER\" -On --use_c++_inline
#        --require_prototypes -I G:\PRG\IAR7_50_2\arm\CMSIS\Include\ -D
#        ARM_MATH_CM3
#    List file    =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List\menu_labels.lst
#    Object file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj\menu_labels.o
#
###############################################################################

G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working files\src\menu_labels.c
      1          #include "header.h"
      2          
      3          /*****************************************************/
      4          //Формуємо екран відображення списку міток настроювання
      5          /*****************************************************/
      6          void make_ekran_list_labels(void)
      7          {
      8            const uint8_t name_string[MAX_NAMBER_LANGUAGE][MAX_ROW_LABELS_M2][MAX_COL_LCD + 1] = 
      9            {
     10              {
     11                " Метка конфиг.  ",
     12                " Метка настроек "
     13              },
     14              {
     15                " Мітка конфіг.  ",
     16                " Мітка налашт.  "
     17              },
     18              {
     19                " Configur.Mark  ",
     20                " Settings Mark  "
     21              },
     22              {
     23                " Метка конфиг.  ",
     24                " Метка настроек "
     25              }
     26            };
     27            int index_language = index_language_in_array(settings_fix_prt.language);
     28            
     29            unsigned int position_temp = current_state_menu2.index_position;
     30            unsigned int index_in_ekran = (position_temp >> POWER_MAX_ROW_LCD) << POWER_MAX_ROW_LCD;
     31            
     32            //Копіюємо  рядки у робочий екран
     33            for (size_t i = 0; i < MAX_ROW_LCD; i++)
     34            {
     35              //Наступні рядки треба перевірити, чи їх требе відображати у текучій коффігурації
     36              for (unsigned int j = 0; j<MAX_COL_LCD; j++) working_ekran[i][j] = (index_in_ekran < MAX_ROW_LABELS_M2) ? name_string[index_language][index_in_ekran][j] : ' ';
     37          
     38              index_in_ekran++;
     39            }
     40          
     41            //Курсор по горизонталі відображається на першій позиції
     42            current_state_menu2.position_cursor_x = 0;
     43            //Відображення курору по вертикалі
     44            current_state_menu2.position_cursor_y = position_temp & (MAX_ROW_LCD - 1);
     45            //Курсор видимий
     46            current_state_menu2.cursor_on = 1;
     47            //Курсор не мигає
     48            current_state_menu2.cursor_blinking_on = 0;
     49            //Обновити повністю весь екран
     50            current_state_menu2.current_action = ACTION_WITH_CARRENT_EKRANE_FULL_UPDATE;
     51          }
     52          /*****************************************************/
     53          
     54          /*****************************************************/
     55          //Формуємо екран мітки часу останніх змін у настроюванні
     56          /*
     57          */
     58          /*****************************************************/
     59          void make_ekran_time_config_or_settings(void)
     60          {
     61            uint8_t name_string[2*MAX_ROW_TIME_CONFIG_OR_SETTINGS][MAX_COL_LCD + 1] = 
     62            {
     63              "XX-XX-20XX      ",
     64              "XX:XX:XX XXXXXXX"
     65            };
     66            
     67            unsigned int position_temp = current_state_menu2.index_position;
     68            unsigned int index_in_ekran = (position_temp >> POWER_MAX_ROW_LCD) << POWER_MAX_ROW_LCD;
     69            uint8_t *point_to_target;
     70          
     71            if (*((unsigned int*)p_menu_param_1) == 0) point_to_target = (&current_config_prt)->time_config;
     72            else point_to_target = (&settings_fix_prt)->time_setpoints;
     73            
     74            /******************************************/
     75            //Заповнюємо поля відповідними цифрами
     76            /******************************************/
     77            //День
     78            name_string[0][0 ] = ((*(point_to_target + 4)) >>  4) + 0x30;
     79            name_string[0][1 ] = ((*(point_to_target + 4)) & 0xf) + 0x30;
     80          
     81            //Місяць
     82            name_string[0][3 ] = ((*(point_to_target + 5)) >>  4) + 0x30;
     83            name_string[0][4 ] = ((*(point_to_target + 5)) & 0xf) + 0x30;
     84          
     85            //Рік
     86            name_string[0][8 ] = ((*(point_to_target + 6)) >>  4) + 0x30;
     87            name_string[0][9 ] = ((*(point_to_target + 6)) & 0xf) + 0x30;
     88          
     89            //Година
     90            name_string[1][0 ] = ((*(point_to_target + 3)) >>  4) + 0x30;
     91            name_string[1][1 ] = ((*(point_to_target + 3)) & 0xf) + 0x30;
     92          
     93            //Хвилини
     94            name_string[1][3 ] = ((*(point_to_target + 2)) >>  4) + 0x30;
     95            name_string[1][4 ] = ((*(point_to_target + 2)) & 0xf) + 0x30;
     96          
     97            //Секунди
     98            name_string[1][6 ] = ((*(point_to_target + 1)) >>  4) + 0x30;
     99            name_string[1][7 ] = ((*(point_to_target + 1)) & 0xf) + 0x30;
    100          
    101            //Повідомлення про джерело змін
    102            if((*(point_to_target + 7)) == DEFAULT_PARAMS_FIX_CHANGES)
    103            {
    104              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 7] = ' ';
    105              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 6] = ' ';
    106              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 5] = ' ';
    107              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 4] = ' ';
    108              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 3] = ' ';
    109              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 2] = ' ';
    110              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 1] = '0';
    111            }
    112            else if((*(point_to_target + 7)) == MENU_PARAMS_FIX_CHANGES)
    113            {
    114              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 7] = ' ';
    115              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 6] = ' ';
    116              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 5] = ' ';
    117              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 4] = ' ';
    118              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 3] = ' ';
    119              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 2] = ' ';
    120              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 1] = 'K';
    121            }
    122            else if((*(point_to_target + 7)) == USB_PARAMS_FIX_CHANGES)
    123            {
    124              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 7] = ' ';
    125              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 6] = ' ';
    126              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 5] = ' ';
    127              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 4] = ' ';
    128              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 3] = 'U';
    129              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 2] = 'S';
    130              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 1] = 'B';
    131            }
    132            else if((*(point_to_target + 7)) == RS485_PARAMS_FIX_CHANGES)
    133            {
    134              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 7] = ' ';
    135              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 6] = 'R';
    136              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 5] = 'S';
    137              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 4] = '-';
    138              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 3] = '4';
    139              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 2] = '8';
    140              name_string[INDEX_TIME_CALIBRATION_M2_TIME][MAX_COL_LCD - 1] = '5';
    141            }
    142            else
    143            {
    144              //теоретично ми сюди б не мали ніколи заходити, але якщо ми сюди зайшли, то виводимо сигналізацію про помилку на екран
    145              const uint8_t error_meas[MAX_NAMBER_LANGUAGE][7 + 1] = 
    146              {
    147                " Ошибка",
    148                "Помилка",
    149                "  Error",
    150                " Ошибка"
    151              };
    152              int index_language = index_language_in_array(settings_fix_prt.language);
    153                
    154              for (size_t i = 0; i < 7; i++) name_string[INDEX_TIME_CALIBRATION_M2_TIME][9 + i] = error_meas[index_language][i];
    155            }
    156            
    157            /******************************************/
    158            
    159            //Копіюємо  рядки у робочий екран
    160            for (size_t i = 0; i < MAX_ROW_LCD; i++)
    161            {
    162              //Наступні рядки треба перевірити, чи їх требе відображати
    163              for (size_t j = 0; j<MAX_COL_LCD; j++) working_ekran[i][j] = (index_in_ekran < (2*MAX_ROW_TIME_CONFIG_OR_SETTINGS)) ? name_string[index_in_ekran][j] : ' ';
    164          
    165              index_in_ekran++;
    166            }
    167          
    168            //Курсор по горизонталі поміщаємо на першій позиції
    169            current_state_menu2.position_cursor_x = 0;
    170            //Відображення курору по вертикалі в 0
    171            current_state_menu2.position_cursor_y = 0;
    172            //Курсор невидимий
    173            current_state_menu2.cursor_on = 0;
    174            //Курсор не мигає
    175            current_state_menu2.cursor_blinking_on = 0;
    176            //Обновити повністю весь екран
    177            current_state_menu2.current_action = ACTION_WITH_CARRENT_EKRANE_FULL_UPDATE;
    178          }
    179          /*****************************************************/
    180          
    181          /*****************************************************/
    182          //
    183          /*****************************************************/
    184          /*****************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     152   make_ekran_list_labels
       152   -> __aeabi_memcpy4
       152   -> index_language_in_array
      88   make_ekran_time_config_or_settings
        88   -> __aeabi_memcpy4
        88   -> index_language_in_array


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
     136  ?_0
      36  ?_1
      32  ?_2
     124  make_ekran_list_labels
     514  make_ekran_time_config_or_settings

 
 204 bytes in section .rodata
 674 bytes in section .text
 
 674 bytes of CODE  memory
 204 bytes of CONST memory

Errors: none
Warnings: none
