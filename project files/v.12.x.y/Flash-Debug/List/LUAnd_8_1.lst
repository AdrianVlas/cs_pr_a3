###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       24/Mar/2017  12:54:55
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\v_A_shm\LUAnd_8_1.cpp
#    Command line =  
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\v_A_shm\LUAnd_8_1.cpp" -D USE_STDPERIPH_DRIVER -D STM32F2XX -D
#        USE_USB_OTG_FS -D SYSTEM_VIEWER_ENABLE -lc
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List" -lB
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List" --remarks -o
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --enable_multibytes --fpu=None
#        --dlib_config G:\PRG\IAR7_50_2\arm\INC\c\DLib_Config_Full.h -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\usb\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_OTG_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Core\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\"
#        -I "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\Config\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\OS\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\SEGGER\" -On --eec++ -I
#        G:\PRG\IAR7_50_2\arm\CMSIS\Include\ -D ARM_MATH_CM3
#    List file    =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List\LUAnd_8_1.lst
#    Object file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj\LUAnd_8_1.o
#
###############################################################################

G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working files\v_A_shm\LUAnd_8_1.cpp
      1          #ifdef VISUAL_STUDIO
      2          #include "StdAfx.h"
      3          #endif
      4          #include "LUAnd_8_1.h"
      5          
      6          void AND_Op_8_1    (void *pObj)
      7          {
      8          	register long i,j;
      9          	register char* pCh;
     10          	
     11          //CLUNot_1_1& refCLUNot_1_1 ;
     12          //CLUAnd_8_1 *pCLUAnd_8_1 = (CLUAnd_8_1*)pObj;
     13          	for(i = 0,pCh = (static_cast<CLUAnd_8_1*>(pObj))->arrPchIn[0],j = 1;i < 8; i++){
     14          		if(pCh[i] == 0){
     15          			j = 0;
     16          			break;
     17          		}
     18          	}
     19          	//((CLUAnd_8_1*)pObj)->arrOut[0] = static_cast<char>(j);//(char)j;
     20          	(reinterpret_cast<CLUAnd_8_1 *>(pObj))->arrOut[0] = static_cast<char>(j);
     21          	//((CLUAnd_8_1*)pObj)->arrOut[0] = static_cast<char>(j);
     22          }
     23          CLUAnd_8_1::CLUAnd_8_1(void):CLUBase()
     24          {
     25          }
     26          CLUAnd_8_1::CLUAnd_8_1(char chM,char chI)//,LUOutDsc* pLUOutDsc)
     27          {
     28          	chMaxIteratoin = chM;
     29          	chIteration = chI;
     30          	chNumInput  = static_cast<char>(shCLUAnd_8_1_AmtIn);//(char)8;
     31          	chNumOutput = static_cast<char>(shCLUAnd_8_1_AmtOut);
     32          	
     33          	
     34          	//Set Input parameters
     35          	 //pIn =arrPchIn;
     36          
     37          	//Set OutPut parameters
     38          	 //pOut =arrOut;
     39          }
     40          
     41          CLUAnd_8_1::~CLUAnd_8_1(void)
     42          {
     43          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   AND_Op_8_1(void *)
       8   CLUAnd_8_1::CLUAnd_8_1()
         8   -> CLUBase::subobject CLUBase()
      16   CLUAnd_8_1::CLUAnd_8_1(char, char)
        16   -> CLUBase::subobject CLUBase()
       8   CLUAnd_8_1::subobject CLUAnd_8_1()
         8   -> CLUAnd_8_1::CLUAnd_8_1()
       8   CLUAnd_8_1::subobject CLUAnd_8_1(char, char)
         8   -> CLUAnd_8_1::CLUAnd_8_1(char, char)
       8   CLUAnd_8_1::subobject ~CLUAnd_8_1()
         8   -> CLUAnd_8_1::~CLUAnd_8_1()
       8   CLUAnd_8_1::~CLUAnd_8_1()
         8   -> CLUBase::subobject ~CLUBase()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      42  AND_Op_8_1(void *)
      14  CLUAnd_8_1::CLUAnd_8_1()
      30  CLUAnd_8_1::CLUAnd_8_1(char, char)
      12  CLUAnd_8_1::subobject CLUAnd_8_1()
      16  CLUAnd_8_1::subobject CLUAnd_8_1(char, char)
      12  CLUAnd_8_1::subobject ~CLUAnd_8_1()
      14  CLUAnd_8_1::~CLUAnd_8_1()

 
 140 bytes in section .text
 
 140 bytes of CODE memory

Errors: none
Warnings: none
