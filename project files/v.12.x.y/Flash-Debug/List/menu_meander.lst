###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       24/Mar/2017  12:54:58
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\menu_meander.c
#    Command line =  
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\menu_meander.c" -D USE_STDPERIPH_DRIVER -D STM32F2XX -D
#        USE_USB_OTG_FS -D KEYBOARD_VER_1 -D SYSTEM_VIEWER_ENABLE -lc
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List" --remarks -o
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --enable_multibytes --fpu=None
#        --dlib_config G:\PRG\IAR7_50_2\arm\INC\c\DLib_Config_Full.h -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\usb\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_OTG_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Core\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\"
#        -I "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\Config\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\OS\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\SEGGER\" -On --use_c++_inline
#        --require_prototypes -I G:\PRG\IAR7_50_2\arm\CMSIS\Include\ -D
#        ARM_MATH_CM3
#    List file    =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List\menu_meander.lst
#    Object file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj\menu_meander.o
#
###############################################################################

G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working files\src\menu_meander.c
      1          #include "header.h"
      2          
      3          /*****************************************************/
      4          //Формуємо екран відображення часових параметнів для ГПС
      5          /*****************************************************/
      6          void make_ekran_delay_meander(void)
      7          {
      8            if (
      9                (current_state_menu2.edition == ED_WARNING_EDITION_BUSY) ||
     10                (current_state_menu2.edition == ED_WARNING_ENTER_ESC)
     11               )   
     12            {
     13              const uint8_t information_about_info[MAX_NAMBER_LANGUAGE][MAX_COL_LCD + 1] = 
     14              {
     15                "Ред.не разрешено",
     16                "Ред.не дозволене",
     17                "Ed.isn't allowed",
     18                "Ред.не разрешено",
     19              };
     20          
     21              const uint8_t information_about_error[MAX_NAMBER_LANGUAGE][MAX_COL_LCD + 1] = 
     22              {
     23                " Вых.за диапазон",
     24                " Вих.за діапазон",
     25                "  Out of Limits ",
     26                "Вых.за диапазон "
     27              };
     28          
     29              enum _edition_stats edition = current_state_menu2.edition;
     30              make_ekran_about_info(((edition == ED_WARNING_EDITION_BUSY) ? false : true), ((edition == ED_WARNING_EDITION_BUSY) ? information_about_info : information_about_error));
     31            }
     32            else
     33            {
     34              const uint8_t name_string[MAX_NAMBER_LANGUAGE][MAX_INDEX_DELAY_MEANDER][MAX_COL_LCD + 1] = 
     35              {
     36                {
     37                  "     Период     "
     38                },
     39                {
     40                  "     Період     "
     41                },
     42                {
     43                  "     Period     "
     44                },
     45                {
     46                  "     Период     "
     47                }
     48              };
     49              
     50              int index_language = index_language_in_array(select_struct_settings_fix()->language);
     51            
     52              unsigned int position_temp = current_state_menu2.index_position;
     53              //Множення на два величини position_temp потрібне для того, бо на одну позицію ми використовуємо два рядки (назва + значення)
     54              unsigned int index_in_ekran = ((position_temp << 1) >> POWER_MAX_ROW_LCD) << POWER_MAX_ROW_LCD;
     55            
     56              unsigned int first_symbol;
     57              uint32_t vaga, value;
     58            
     59              __settings_for_MEANDER *p_settings_for_meander;
     60              if (current_state_menu2.edition == ED_VIEWING) p_settings_for_meander = &((((__LN_MEANDER*)spca_of_p_prt[ID_FB_MEANDER - _ID_FB_FIRST_VAR]) + current_state_menu2.number_selection)->settings);
     61              else if (current_state_menu2.edition == ED_CAN_BE_EDITED) p_settings_for_meander = (((__settings_for_MEANDER*)sca_of_p[ID_FB_MEANDER - _ID_FB_FIRST_VAR]) + current_state_menu2.number_selection);
     62              else p_settings_for_meander = (((__settings_for_MEANDER*)sca_of_p_edit[ID_FB_MEANDER - _ID_FB_FIRST_VAR]) + current_state_menu2.number_selection);
     63              size_t col_begin, col_end, col_comma;
     64            
     65              for (size_t i = 0; i < MAX_ROW_LCD; i++)
     66              {
     67                unsigned int index_in_ekran_tmp = index_in_ekran >> 1;
     68                if (index_in_ekran_tmp < MAX_INDEX_DELAY_MEANDER)
     69                {
     70                  if ((i & 0x1) == 0)
     71                  {
     72                    //У непарному номері рядку виводимо заголовок
     73                    for (size_t j = 0; j<MAX_COL_LCD; j++) working_ekran[i][j] = name_string[index_language][index_in_ekran_tmp][j];
     74                    first_symbol = 0; //помічаємо, що ще ніодин значущий символ не виведений
     75          
     76                    switch (index_in_ekran_tmp)
     77                    {
     78                    case INDEX_DELAY_MEANDER_PERIOD:
     79                      {
     80                        vaga = 10000; //максимальний ваговий коефіцієнт
     81                        col_begin = COL_DELAY_MEANDER_PERIOD_BEGIN;
     82                        col_end = COL_DELAY_MEANDER_PERIOD_END;
     83                        col_comma = COL_DELAY_MEANDER_PERIOD_COMMA;
     84                      
     85                        value = p_settings_for_meander->set_delay[MEANDER_SET_DELAY_PERIOD];
     86                      
     87                        break;
     88                      }
     89                    }
     90                  }
     91                  else
     92                  {
     93                    //У парному номері рядку виводимо значення
     94                    for (size_t j = 0; j < MAX_COL_LCD; j++)
     95                    {
     96                      if (
     97                          ((j < col_begin) ||  (j > col_end )) &&
     98                          (j != (col_end + 2))
     99                         )working_ekran[i][j] = ' ';
    100                      else if (j == col_comma )working_ekran[i][j] = ',';
    101                      else if (j == (col_end + 2)) working_ekran[i][j] = odynyci_vymirjuvannja[index_language][INDEX_SECOND];
    102                      else
    103                        calc_symbol_and_put_into_working_ekran((working_ekran[i] + j), &value, &vaga, &first_symbol, j, col_comma, 0);
    104                    }
    105                  }
    106                  
    107                }
    108                else
    109                  for (size_t j = 0; j < MAX_COL_LCD; j++) working_ekran[i][j] = ' ';
    110          
    111                index_in_ekran++;
    112              }
    113          
    114              //Відображення курору по вертикалі і курсор завжди має бути у полі із значенням устаки
    115              current_state_menu2.position_cursor_y = ((position_temp<<1) + 1) & (MAX_ROW_LCD - 1);
    116          
    117              if (current_state_menu2.edition <= ED_CAN_BE_EDITED)
    118              {
    119                int last_position_cursor_x = MAX_COL_LCD;
    120                switch (current_state_menu2.index_position)
    121                {
    122                case INDEX_DELAY_MEANDER_PERIOD:
    123                  {
    124                    current_state_menu2.position_cursor_x = COL_DELAY_MEANDER_PERIOD_BEGIN;
    125                    last_position_cursor_x = COL_DELAY_MEANDER_PERIOD_END;
    126                    break;
    127                  }
    128                }
    129          
    130                //Підтягуємо курсор до першого символу
    131                while (
    132                       ((working_ekran[current_state_menu2.position_cursor_y][current_state_menu2.position_cursor_x + 1]) == ' ') && 
    133                       (current_state_menu2.position_cursor_x < (last_position_cursor_x -1))
    134                       )
    135                {
    136                  current_state_menu2.position_cursor_x++;
    137                }
    138          
    139                //Курсор ставимо так, щоб він був перед числом
    140                if (
    141                    ((working_ekran[current_state_menu2.position_cursor_y][current_state_menu2.position_cursor_x]) != ' ') && 
    142                    (current_state_menu2.position_cursor_x > 0)
    143                   )
    144                {
    145                  current_state_menu2.position_cursor_x--;
    146                }
    147              }
    148              //Курсор видимий
    149              current_state_menu2.cursor_on = 1;
    150              //Курсор не мигає
    151              if(current_state_menu2.edition <= ED_CAN_BE_EDITED) current_state_menu2.cursor_blinking_on = 0;
    152              else current_state_menu2.cursor_blinking_on = 1;
    153            }
    154            //Обновити повністю весь екран
    155            current_state_menu2.current_action = ACTION_WITH_CARRENT_EKRANE_FULL_UPDATE;
    156          }
    157          /*****************************************************/
    158          
    159          /*****************************************************/
    160          /*
    161          Натискування Enter у вікні відображення витримок ГПС
    162          */
    163          /*****************************************************/
    164          enum _result_pressed_enter_during_edition press_enter_in_delay_meander(void)
    165          {
    166            enum _result_pressed_enter_during_edition result = RPEDE_NONE;
    167            switch (current_state_menu2.edition)
    168            {
    169            case ED_VIEWING:
    170            case ED_CAN_BE_EDITED:
    171              {
    172                switch (current_state_menu2.index_position)
    173                {
    174                case INDEX_DELAY_MEANDER_PERIOD:
    175                  {
    176                    current_state_menu2.position_cursor_x = COL_DELAY_MEANDER_PERIOD_BEGIN;
    177                    break;
    178                  }
    179                }
    180                break;
    181              }
    182            case ED_EDITION:
    183              {
    184                //Перевіряємо, чи дані рельно змінилися
    185                result = RPEDE_DATA_NOT_CHANGED;
    186                
    187                __settings_for_MEANDER *p_settings_for_meander_edit = (((__settings_for_MEANDER*)sca_of_p_edit[ID_FB_MEANDER - _ID_FB_FIRST_VAR]) + current_state_menu2.number_selection);
    188                __settings_for_MEANDER *p_settings_for_meander_cont = (((__settings_for_MEANDER*)sca_of_p[ID_FB_MEANDER - _ID_FB_FIRST_VAR]) + current_state_menu2.number_selection);
    189                switch (current_state_menu2.index_position)
    190                {
    191                case INDEX_DELAY_MEANDER_PERIOD:
    192                  {
    193                    if (p_settings_for_meander_cont->set_delay[MEANDER_SET_DELAY_PERIOD] != p_settings_for_meander_edit->set_delay[MEANDER_SET_DELAY_PERIOD]) 
    194                    {
    195                      if (check_data_setpoint(p_settings_for_meander_edit->set_delay[MEANDER_SET_DELAY_PERIOD], TIMEOUT_MEANDER_PERIOD_MIN, TIMEOUT_MEANDER_PERIOD_MAX) == 1)
    196                      {
    197                        p_settings_for_meander_cont->set_delay[MEANDER_SET_DELAY_PERIOD] = p_settings_for_meander_edit->set_delay[MEANDER_SET_DELAY_PERIOD];
    198                        config_settings_modified |= MASKA_CHANGED_SETTINGS;
    199                        result = RPEDE_DATA_CHANGED_OK;
    200                      }
    201                      else result = RPEDE_DATA_CHANGED_OUT_OF_RANGE;
    202                    }
    203          
    204                    break;
    205                  }
    206                }
    207          
    208                break;
    209              }
    210            }
    211            
    212            return result;
    213          }
    214          /*****************************************************/
    215          
    216          /*****************************************************/
    217          /*
    218          Натискування ESC у вікні витримок багатофункціональних таймерів
    219          */
    220          /*****************************************************/
    221          void press_esc_in_delay_meander(void)
    222          {
    223            __settings_for_MEANDER *p_settings_for_meander_edit = (((__settings_for_MEANDER*)sca_of_p_edit[ID_FB_MEANDER - _ID_FB_FIRST_VAR]) + current_state_menu2.number_selection);
    224            __settings_for_MEANDER *p_settings_for_meander_cont = (((__settings_for_MEANDER*)sca_of_p[ID_FB_MEANDER - _ID_FB_FIRST_VAR]) + current_state_menu2.number_selection);
    225            switch (current_state_menu2.index_position)
    226            {
    227            case INDEX_DELAY_MEANDER_PERIOD:
    228              {
    229                p_settings_for_meander_edit->set_delay[MEANDER_SET_DELAY_PERIOD] = p_settings_for_meander_cont->set_delay[MEANDER_SET_DELAY_PERIOD];
    230                break;
    231              }
    232            }
    233          }
    234          /*****************************************************/
    235          
    236          /*****************************************************/
    237          //Зміна налаштування
    238          /*****************************************************
    239          Вхідні параметри
    240          (1 << BIT_KEY_DOWN) - натснуто кнопку вниз
    241          (1 << BIT_KEY_UP)   - атиснуто кнопку вверх
    242          (1 << BIT_KEY_RIGHT)- натснуто кнопку праворуч
    243          (1 << BIT_KEY_LEFT) - атиснуто кнопку ліворуч
    244          
    245          Вхідні параметри
    246            Немає
    247          *****************************************************/
    248          void change_delay_meander(unsigned int action)
    249          {
    250            //Вводимо число у відповідне поле
    251            if (action & ((1 << BIT_KEY_DOWN) | (1 << BIT_KEY_UP)))
    252            {
    253              int32_t *p_value = (((__settings_for_MEANDER*)sca_of_p_edit[ID_FB_MEANDER - _ID_FB_FIRST_VAR]) + current_state_menu2.number_selection)->set_delay;
    254              unsigned int col_end, col_comma;
    255              switch (current_state_menu2.index_position)
    256              {
    257              case INDEX_DELAY_MEANDER_PERIOD:
    258                {
    259                  col_end = COL_DELAY_MEANDER_PERIOD_END;
    260                  col_comma = COL_DELAY_MEANDER_PERIOD_COMMA;
    261                  break;
    262                }
    263              }
    264              
    265              intptr_t index = current_state_menu2.index_position;
    266              p_value[index] = edit_setpoint(((action & (1 << BIT_KEY_UP)) != 0), p_value[index], 1, col_comma, col_end, 100);
    267            }
    268            else if (
    269                     ((action & (1 << BIT_KEY_LEFT )) != 0) ||
    270                     ((action & (1 << BIT_KEY_RIGHT)) != 0)
    271                    )   
    272            {
    273              int col_begin, col_end, col_comma;
    274              switch (current_state_menu2.index_position)
    275              {
    276              case INDEX_DELAY_MEANDER_PERIOD:
    277                {
    278                  col_begin = COL_DELAY_MEANDER_PERIOD_BEGIN;
    279                  col_end = COL_DELAY_MEANDER_PERIOD_END;
    280                  col_comma = COL_DELAY_MEANDER_PERIOD_COMMA;
    281                  break;
    282                }
    283              }
    284              
    285              if (action & (1 << BIT_KEY_LEFT ))
    286              {
    287                current_state_menu2.position_cursor_x--;
    288                if (current_state_menu2.position_cursor_x == col_comma )current_state_menu2.position_cursor_x--;
    289                if ((current_state_menu2.position_cursor_x < col_begin) ||
    290                    (current_state_menu2.position_cursor_x > col_end))
    291                  current_state_menu2.position_cursor_x = col_end;
    292              }
    293              else
    294              {
    295                current_state_menu2.position_cursor_x++;
    296                if (current_state_menu2.position_cursor_x == col_comma )current_state_menu2.position_cursor_x++;
    297                if ((current_state_menu2.position_cursor_x < col_begin) ||
    298                    (current_state_menu2.position_cursor_x > col_end))
    299                  current_state_menu2.position_cursor_x = col_begin;
    300              }
    301              
    302            }
    303          }
    304          /*****************************************************/
    305          
    306          /*****************************************************/
    307          //
    308          /*****************************************************/
    309          /*****************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   change_delay_meander
        32   -> edit_setpoint
     272   make_ekran_delay_meander
       272   -> __aeabi_memcpy4
       272   -> calc_symbol_and_put_into_working_ekran
       272   -> index_language_in_array
       272   -> make_ekran_about_info
       272   -> select_struct_settings_fix
      16   press_enter_in_delay_meander
        16   -> check_data_setpoint
       0   press_esc_in_delay_meander


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      68  ?_0
      68  ?_1
      68  ?_2
     224  change_delay_meander
     638  make_ekran_delay_meander
     132  press_enter_in_delay_meander
      40  press_esc_in_delay_meander

 
   204 bytes in section .rodata
 1 074 bytes in section .text
 
 1 074 bytes of CODE  memory
   204 bytes of CONST memory

Errors: none
Warnings: none
