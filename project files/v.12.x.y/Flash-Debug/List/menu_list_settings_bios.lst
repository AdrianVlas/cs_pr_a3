###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.2.10312/W32 for ARM       24/Mar/2017  12:54:57
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\menu_list_settings_bios.c
#    Command line =  
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working
#        files\src\menu_list_settings_bios.c" -D USE_STDPERIPH_DRIVER -D
#        STM32F2XX -D USE_USB_OTG_FS -D KEYBOARD_VER_1 -D SYSTEM_VIEWER_ENABLE
#        -lc "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List" --remarks -o
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --enable_multibytes --fpu=None
#        --dlib_config G:\PRG\IAR7_50_2\arm\INC\c\DLib_Config_Full.h -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\working files\usb\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_OTG_Driver\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Core\inc\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\"
#        -I "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\Config\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\OS\" -I
#        "G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\..\..\SystemView\SEGGER\" -On --use_c++_inline
#        --require_prototypes -I G:\PRG\IAR7_50_2\arm\CMSIS\Include\ -D
#        ARM_MATH_CM3
#    List file    =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\List\menu_list_settings_bios.lst
#    Object file  =  
#        G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\project
#        files\v.12.x.y\Flash-Debug\Obj\menu_list_settings_bios.o
#
###############################################################################

G:\emb_pj\CS_Demo\demo3\cs_pr_a\Device-2.12.x.y\working files\src\menu_list_settings_bios.c
      1          #include "header.h"
      2          
      3          /*****************************************************/
      4          /*
      5          Функція переміщення по меню
      6          
      7          Вхідні параметри
      8          (1 << BIT_REWRITE) - перемалювати меню
      9          (1 << BIT_KEY_DOWN) - рухатися вниз
     10          (1 << BIT_KEY_UP) - рухатися вверх
     11          */
     12          /*****************************************************/
     13          void move_into_list_settings_bios(unsigned int action, int max_row)
     14          {
     15            __CONFIG *p_current_config;
     16            p_current_config = (current_state_menu2.edition == ED_VIEWING) ? &current_config_prt : &current_config;
     17             
     18            if (
     19                (p_current_config->n_input != 0) ||
     20                (p_current_config->n_output != 0)||
     21                (p_current_config->n_led != 0)
     22               )
     23            {
     24              if (action & ((1 << BIT_REWRITE) | (1 << BIT_KEY_DOWN)))
     25              {
     26                if (action & (1 << BIT_KEY_DOWN)) current_state_menu2.index_position++;
     27                do
     28                {
     29                  if(current_state_menu2.index_position >= max_row) current_state_menu2.index_position = 0;
     30                  while (
     31                         (
     32                          (current_state_menu2.index_position == INDEX_LIST_SETTINGS_BIOS_M2_INPUT) &&
     33                          (p_current_config->n_input == 0)
     34                         )
     35                         ||
     36                         (
     37                          (current_state_menu2.index_position == INDEX_LIST_SETTINGS_BIOS_M2_OUTPUT) &&
     38                          (p_current_config->n_output == 0)
     39                         )
     40                         ||
     41                         (
     42                          (current_state_menu2.index_position == INDEX_LIST_SETTINGS_BIOS_M2_LED) &&
     43                          (p_current_config->n_led == 0)
     44                         )
     45                        )   
     46                  {
     47                    if(++current_state_menu2.index_position >= max_row) current_state_menu2.index_position = 0;
     48                  }
     49                }
     50                while ((action & (1 << BIT_KEY_DOWN)) && (current_state_menu2.index_position >= max_row));
     51              }
     52              else if (action & (1 << BIT_KEY_UP))
     53              {
     54                current_state_menu2.index_position--;
     55                do
     56                {
     57                  if(current_state_menu2.index_position < 0) current_state_menu2.index_position = max_row - 1;
     58                  while (
     59                         (
     60                          (current_state_menu2.index_position == INDEX_LIST_SETTINGS_BIOS_M2_INPUT) &&
     61                          (p_current_config->n_input == 0)
     62                         )
     63                         ||
     64                         (
     65                          (current_state_menu2.index_position == INDEX_LIST_SETTINGS_BIOS_M2_OUTPUT) &&
     66                          (p_current_config->n_output == 0)
     67                         )
     68                         ||
     69                         (
     70                          (current_state_menu2.index_position == INDEX_LIST_SETTINGS_BIOS_M2_LED) &&
     71                          (p_current_config->n_led == 0)
     72                         )
     73                        )    
     74                  {
     75                    if(--current_state_menu2.index_position < 0) current_state_menu2.index_position = max_row - 1;
     76                  }
     77                }
     78                while (current_state_menu2.index_position < 0);
     79              }
     80            }
     81          }
     82          /*****************************************************/
     83          
     84          /*****************************************************/
     85          //Формуємо екран відображення заголовків настройок пристроїв вводу-виводу
     86          /*****************************************************/
     87          void make_ekran_list_settings_bios(void)
     88          {
     89            int index_language = index_language_in_array(select_struct_settings_fix()->language);
     90              
     91            __CONFIG *p_current_config;
     92            p_current_config = (current_state_menu2.edition == ED_VIEWING) ? &current_config_prt : &current_config;
     93            if (
     94                (p_current_config->n_input == 0) &&
     95                (p_current_config->n_output == 0)&&
     96                (p_current_config->n_led == 0)
     97               )
     98            {
     99              const uint8_t name_string[MAX_NAMBER_LANGUAGE][2][MAX_COL_LCD + 1] = 
    100              {
    101                {
    102                  " УВВ отсутсвуют ",
    103                  "  в устройстве  "
    104                },
    105                {
    106                  "  ПВВ відсутні  ",
    107                  "   у пристрої   "
    108                },
    109                {
    110                  " BIOS are absent",
    111                  "   in device    "
    112                },
    113                {
    114                  " УВВ отсутсвуют ",
    115                  "  в устройстве  "
    116                }
    117              };
    118          
    119              unsigned int index_in_ekran = 0;
    120              //Копіюємо  рядки у робочий екран
    121              for (size_t i = 0; i < MAX_ROW_LCD; i++)
    122              {
    123                //Наступні рядки треба перевірити, чи їх требе відображати у текучій коффігурації
    124                for (size_t j = 0; j < MAX_COL_LCD; j++) 
    125                {
    126                  working_ekran[i][j] = (index_in_ekran < 2) ? name_string[index_language][index_in_ekran][j] : ' ';
    127                }
    128                index_in_ekran++;
    129              }
    130          
    131              //Курсор по горизонталі відображається на першій позиції
    132              current_state_menu2.position_cursor_x = 0;
    133              //Відображення курору по вертикалі
    134              current_state_menu2.position_cursor_y = 0;
    135              //Курсор невидимий
    136              current_state_menu2.cursor_on = 0;
    137              //Курсор не мигає
    138              current_state_menu2.cursor_blinking_on = 0;
    139            }
    140            else
    141            {
    142              const uint8_t name_string[MAX_NAMBER_LANGUAGE][MAX_ROW_LIST_SETTINGS_BIOS_M2][MAX_COL_LCD + 1] = 
    143              {
    144                {
    145                  " Д.Входы        ",
    146                  " В.Реле         ",
    147                  " Светоиндикаторы"
    148                },
    149                {
    150                  " Д.Входи        ",
    151                  " В.Реле         ",
    152                  " Світоіндикатори"
    153                },
    154                {
    155                  " D.Inputs       ",
    156                  " O.Relays       ",
    157                  " LEDs           "
    158                },
    159                {
    160                  " Д.Входы        ",
    161                  " В.Реле         ",
    162                  " Светоиндикаторы"
    163                }
    164              };
    165          
    166              unsigned int additional_current = 0;
    167              unsigned int position_temp = current_state_menu2.index_position;
    168          
    169              uint8_t name_string_tmp[MAX_ROW_LIST_SETTINGS_M2][MAX_COL_LCD + 1];
    170              for(size_t index_1 = 0; index_1 < MAX_ROW_LIST_SETTINGS_BIOS_M2; index_1++)
    171              {
    172                if (
    173                    (
    174                     (index_1 == INDEX_LIST_SETTINGS_BIOS_M2_INPUT) &&
    175                     (p_current_config->n_input == 0)
    176                    )
    177                    ||
    178                    (
    179                     (index_1 == INDEX_LIST_SETTINGS_BIOS_M2_OUTPUT) &&
    180                     (p_current_config->n_output == 0)
    181                    )
    182                    ||
    183                    (
    184                     (index_1 == INDEX_LIST_SETTINGS_BIOS_M2_LED) &&
    185                     (p_current_config->n_led == 0)
    186                    )
    187                   )
    188                {
    189                  if ((index_1 - additional_current) < position_temp) position_temp--;
    190                  additional_current++;
    191          
    192                  for(size_t index_2 = 0; index_2 < MAX_COL_LCD; index_2++)
    193                  {
    194                    name_string_tmp[MAX_ROW_LIST_SETTINGS_M2 - additional_current][index_2] = ' ';
    195                  }
    196                  name_string_tmp[MAX_ROW_LIST_SETTINGS_M2 - additional_current][MAX_COL_LCD] = '\0';
    197                }
    198                else
    199                {
    200                  for(size_t index_2 = 0; index_2 < (MAX_COL_LCD + 1); index_2++)
    201                  {
    202                    name_string_tmp[index_1 - additional_current][index_2] = name_string[index_language][index_1][index_2];
    203                  }
    204                }
    205              }
    206              unsigned int index_in_ekran = (position_temp >> POWER_MAX_ROW_LCD) << POWER_MAX_ROW_LCD;;
    207            
    208              //Копіюємо  рядки у робочий екран
    209              for (size_t i = 0; i < MAX_ROW_LCD; i++)
    210              {
    211                //Наступні рядки треба перевірити, чи їх требе відображати у текучій коффігурації
    212                for (size_t j = 0; j < MAX_COL_LCD; j++) 
    213                {
    214                  working_ekran[i][j] = (index_in_ekran < (MAX_ROW_LIST_SETTINGS_BIOS_M2 - additional_current)) ? name_string_tmp[index_in_ekran][j] : ' ';
    215                }
    216                index_in_ekran++;
    217              }
    218          
    219              //Курсор по горизонталі відображається на першій позиції
    220              current_state_menu2.position_cursor_x = 0;
    221              //Відображення курору по вертикалі
    222              current_state_menu2.position_cursor_y = position_temp & (MAX_ROW_LCD - 1);
    223              //Курсор видимий
    224              current_state_menu2.cursor_on = 1;
    225              //Курсор не мигає
    226              current_state_menu2.cursor_blinking_on = 0;
    227            }
    228            
    229            //Обновити повністю весь екран
    230            current_state_menu2.current_action = ACTION_WITH_CARRENT_EKRANE_FULL_UPDATE;
    231          }
    232          /*****************************************************/
    233          
    234          /*****************************************************/
    235          //
    236          /*****************************************************/
    237          /*****************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     536   make_ekran_list_settings_bios
       536   -> __aeabi_memcpy4
       536   -> index_language_in_array
       536   -> select_struct_settings_fix
       4   move_into_list_settings_bios


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
     136  ?_0
     204  ?_1
     408  make_ekran_list_settings_bios
     288  move_into_list_settings_bios

 
 340 bytes in section .rodata
 724 bytes in section .text
 
 724 bytes of CODE  memory
 340 bytes of CONST memory

Errors: none
Warnings: none
